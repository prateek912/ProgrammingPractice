package com.java.test;

import java.util.Arrays;
import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		int testcases = sc.nextInt();
		String str = "";
		int n,m=0;
		StringBuilder sb = new StringBuilder();
		while(testcases > 0) {
			
			str = sc.next();
			n = sc.nextInt();
			m = sc.nextInt();
			
			sb.append(str.substring(0,n));
			//System.out.println(str.substring(0,n));
			sb.append(sortString(str.substring(n,m)));
			//System.out.println(sortDescending(str.substring(n,m+1)));
			sb.append(str.substring(m));
			//System.out.println(str.substring(m+1));
			sb.append(" ");
			testcases--;
		}
		
		String[] result = sb.toString().split(" ");
		for (String s : result) {
			System.out.println(s);
		}
		
		sc.close();
	}
	
	
	//Optimize Method
	public static String sortDescending(String str) {
		char[] ch = str.toCharArray();
		Arrays.sort(ch);
		
		StringBuilder sb = new StringBuilder();
		for(int i = ch.length -1; i >=0; i--) {
			sb.append(ch[i]);
		}
		
		return sb.toString();
		
	}
	
	// Need Optimization
	public static String sortString(String str) {
		// Reverse String descending Order
		char[] ch = str.toCharArray();
		StringBuilder sb = new StringBuilder();
		for(int i=0; i < ch.length; i++) {
			for(int j=0 ; j < ch.length; j++) {
				if(ch[j] < ch[i]) {
					char temp = ch[i];
					ch[i] = ch[j];
					ch[j] = temp;
				}
			}
		}
	
		for (char c : ch) {
			sb.append(c);
		}
		
		//System.out.println("Sorted String :"+ sb.toString());
		return sb.toString();
	}
}
